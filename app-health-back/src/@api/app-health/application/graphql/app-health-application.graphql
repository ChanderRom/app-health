enum AppHealthApplicationType {
    FRONTEND
    SERVER
    MOBILE
    EMBEDDED
}


type AppHealthApplication
{
    id: ID!
    technicalSolutionId: ID!
    name: GraphQLString!
    description: GraphQLString
    businessImpact: GraphQLString
    type: AppHealthApplicationType!
    releaseDate: GraphQLISODateTime!
    architectureDiagram: GraphQLString!
    hasTenants: GraphQLBoolean!
    hasLicensing: GraphQLBoolean!
    costLicensesPerYear: GraphQLInt!
    requestsPerDay: GraphQLInt!
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input AppHealthCreateApplicationInput
{
    id: ID!
    technicalSolutionId: ID!
    name: GraphQLString!
    description: GraphQLString
    businessImpact: GraphQLString
    type: AppHealthApplicationType!
    releaseDate: GraphQLISODateTime!
    architectureDiagram: GraphQLString!
    hasTenants: GraphQLBoolean!
    hasLicensing: GraphQLBoolean!
    costLicensesPerYear: GraphQLInt!
    requestsPerDay: GraphQLInt!
}

input AppHealthUpdateApplicationByIdInput
{
    id: ID!
    technicalSolutionId: ID
    name: GraphQLString
    description: GraphQLString
    businessImpact: GraphQLString
    type: AppHealthApplicationType
    releaseDate: GraphQLISODateTime
    architectureDiagram: GraphQLString
    hasTenants: GraphQLBoolean
    hasLicensing: GraphQLBoolean
    costLicensesPerYear: GraphQLInt
    requestsPerDay: GraphQLInt
}

input AppHealthUpdateApllicationsInput
{
    id: ID
    technicalSolutionId: ID
    name: GraphQLString
    description: GraphQLString
    businessImpact: GraphQLString
    type: AppHealthApplicationType
    releaseDate: GraphQLISODateTime
    architectureDiagram: GraphQLString
    hasTenants: GraphQLBoolean
    hasLicensing: GraphQLBoolean
    costLicensesPerYear: GraphQLInt
    requestsPerDay: GraphQLInt
}

type Query
{
    appHealthFindApplication(
        query: QueryStatement
        constraint: QueryStatement
    ): AppHealthApplication

    appHealthFindApplicationById(
        id: ID
        constraint: QueryStatement
    ): AppHealthApplication

    appHealthGetApllications(
        query: QueryStatement
        constraint: QueryStatement
    ): [AppHealthApplication]!

    appHealthPaginateApllications(
        query: QueryStatement
        constraint: QueryStatement
    ): Pagination!

}

type Mutation
{
    appHealthCreateApplication(
        payload: AppHealthCreateApplicationInput!
    ): AppHealthApplication

    appHealthCreateApllications(
        payload: [AppHealthCreateApplicationInput]!
    ): Boolean!

    appHealthUpdateApplicationById(
        payload: AppHealthUpdateApplicationByIdInput!
        constraint: QueryStatement
    ): AppHealthApplication

    appHealthUpdateApllications(
        payload: AppHealthUpdateApllicationsInput!
        query: QueryStatement
        constraint: QueryStatement
    ): [AppHealthApplication]!

    appHealthUpsertApplication(
        payload: AppHealthUpdateApplicationByIdInput!
    ): AppHealthApplication

    appHealthDeleteApplicationById(
        id: ID!
        constraint: QueryStatement
    ): AppHealthApplication

    appHealthDeleteApllications(
        query: QueryStatement
        constraint: QueryStatement
    ): [AppHealthApplication]!

}